{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/cat.js","src/scripts/change_language.js","src/scripts/change_theme.js","src/scripts/toggle_button.js"],"sourcesContent":["(function () {\nfunction $365582facd4372eb$export$99aaa11fb71d263() {\n    // Hide the cat if the screen width is less than 800px\n    var cat = document.querySelector(\".cat\");\n    if (window.innerWidth < 1025) cat.style.display = \"none\"; // Hide the cat\n    else cat.style.display = \"block\"; // Ensure the cat is visible on larger screens\n    // Make the cat's pupils follow the cursor\n    document.addEventListener(\"mousemove\", function(e) {\n        if (window.innerWidth >= 1025) {\n            var pupils = document.querySelectorAll(\".pupil\");\n            var mouseX = e.clientX;\n            var mouseY = e.clientY;\n            // Get the cat's position\n            var catRect = cat.getBoundingClientRect();\n            var catX = catRect.left + catRect.width / 2;\n            var catY = catRect.top + catRect.height / 2;\n            // Calculate the distance between the cursor and the cat\n            var distance = Math.sqrt(Math.pow(mouseX - catX, 2) + Math.pow(mouseY - catY, 2));\n            // If the cursor is within 100px of the cat, move the cat and eyes down\n            if (distance < 100) cat.classList.add(\"move-down\");\n            else cat.classList.remove(\"move-down\");\n            // Calculate the angle between the cat and the cursor\n            var angle = Math.atan2(mouseY - catY, mouseX - catX);\n            // Calculate the distance the pupils should move\n            var maxDistance = 5; // Maximum distance the pupils can move\n            var pupilX = Math.cos(angle) * maxDistance;\n            var pupilY = Math.sin(angle) * maxDistance;\n            // Move the pupils\n            pupils.forEach(function(pupil) {\n                pupil.style.transform = \"translate(calc(-50% + \".concat(pupilX, \"px), calc(-50% + \").concat(pupilY, \"px))\");\n            });\n        }\n    });\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        var traits = document.querySelectorAll(\".trait\");\n        traits.forEach(function(trait) {\n            var percent = trait.getAttribute(\"data-percent\");\n            var circle = trait.querySelector(\".circle\");\n            var angle = percent / 100 * 360;\n            trait.style.background = \"conic-gradient(#4caf50 \".concat(angle, \"deg, #e0e0e0 \").concat(angle, \"deg)\");\n            var radius = 100; // Radius of the circle\n            var radians = (angle - 90) * (Math.PI / 180); // Convert degrees to radians\n            var x = radius + radius * Math.cos(radians);\n            var y = radius + radius * Math.sin(radians);\n            circle.style.left = \"\".concat(x, \"px\");\n            circle.style.top = \"\".concat(y, \"px\");\n        });\n    });\n    // Listen to window resize to show or hide the cat\n    window.addEventListener(\"resize\", function() {\n        if (window.innerWidth < 800) cat.style.display = \"none\";\n        else cat.style.display = \"block\";\n    });\n}\n\n\nfunction $d4e144b1e84ad65c$export$fdbad0b2e231b98b() {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        var languageButtons = document.querySelectorAll(\".change_language h3\");\n        var elementsToTranslate = document.querySelectorAll(\"[data-en], [data-fr], [data-ua], [data-de]\");\n        // Function to change language\n        var changeLanguage = function(language) {\n            elementsToTranslate.forEach(function(element) {\n                if (element.dataset[language]) element.textContent = element.dataset[language];\n            });\n            // Save the selected language to localStorage\n            localStorage.setItem(\"selectedLanguage\", language);\n        };\n        // Load the saved language from localStorage\n        var loadLanguage = function() {\n            var savedLanguage = localStorage.getItem(\"selectedLanguage\") || \"en\"; // Default to 'en' if no language is saved\n            changeLanguage(savedLanguage);\n        };\n        // Add click event listeners to language buttons\n        languageButtons.forEach(function(button) {\n            button.addEventListener(\"click\", function() {\n                var language = button.classList.contains(\"change_language_en\") ? \"en\" : button.classList.contains(\"change_language_ua\") ? \"ua\" : button.classList.contains(\"change_language_fr\") ? \"fr\" : button.classList.contains(\"change_language_de\") ? \"de\" : null;\n                if (language) changeLanguage(language);\n            });\n        });\n        // Load the saved language when the page loads\n        loadLanguage();\n    });\n}\n\n\nfunction $168fa48b53d2f406$export$fda414375a5f0ecf() {\n    var settingsBtn = document.getElementById(\"settings-btn\");\n    var themeButtons = document.querySelectorAll(\".theme-btn\");\n    var themeContainer = document.getElementById(\"theme-buttons\");\n    // Check if elements exist\n    if (!settingsBtn || !themeButtons.length || !themeContainer) {\n        console.error(\"Theme changer elements not found!\");\n        return;\n    }\n    // Toggle theme buttons visibility\n    settingsBtn.addEventListener(\"click\", function() {\n        themeContainer.classList.toggle(\"hidden\");\n        settingsBtn.classList.toggle(\"active\");\n    });\n    // Function to apply the theme\n    function applyTheme(theme) {\n        var root = document.documentElement;\n        var themes = {\n            default: [\n                \"#1D92B6\",\n                \"#2A87A5\",\n                \"#3B8A99\",\n                \"#1A64A4\",\n                \"#2D2D2D\"\n            ],\n            dark: [\n                \"#1A1A1A\",\n                \"#2D2D2D\",\n                \"#444444\",\n                \"#FF7B7B\",\n                \"#B0B0B0\"\n            ],\n            yellow: [\n                \"#F9D342\",\n                \"#E2B300\",\n                \"#FFDD4A\",\n                \"#FFB300\",\n                \"#4D4D00\"\n            ],\n            green: [\n                \"#4CAF50\",\n                \"#388E3C\",\n                \"#66BB6A\",\n                \"#2E7D32\",\n                \"#1B5E20\"\n            ]\n        };\n        if (themes[theme]) [\n            \"--main-color-1\",\n            \"--main-color-2\",\n            \"--background-of-date\",\n            \"--link-hover\",\n            \"--link-color\"\n        ].forEach(function(prop, i) {\n            return root.style.setProperty(prop, themes[theme][i]);\n        });\n        localStorage.setItem(\"selectedTheme\", theme);\n    }\n    // Function to set the selected button\n    function setSelectedButton(theme) {\n        themeButtons.forEach(function(button) {\n            if (button.dataset.theme === theme) button.classList.add(\"selected\");\n            else button.classList.remove(\"selected\");\n        });\n    }\n    // Load the saved theme\n    function loadTheme() {\n        var savedTheme = localStorage.getItem(\"selectedTheme\") || \"default\";\n        applyTheme(savedTheme);\n        setSelectedButton(savedTheme);\n    }\n    // Theme button event listeners\n    themeButtons.forEach(function(button) {\n        button.addEventListener(\"click\", function() {\n            var theme = button.dataset.theme;\n            applyTheme(theme);\n            setSelectedButton(theme);\n        });\n    });\n    loadTheme();\n}\n\n\nfunction $1af2af1f706175c7$export$f9183fa04b4e0476() {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        // Get all toggle buttons\n        var toggleButtons = document.querySelectorAll(\".toggle__btn\");\n        // Add click event listeners to each toggle button\n        toggleButtons.forEach(function(button) {\n            button.addEventListener(\"click\", function(event) {\n                event.stopPropagation(); // Prevent event bubbling\n                var popupText = button.previousElementSibling; // Get the popup text element\n                // Toggle the active class on the popup text and the toggle button\n                popupText.classList.toggle(\"active\");\n                button.classList.toggle(\"active\");\n                // Change the toggle button text\n                if (button.classList.contains(\"active\")) button.textContent = \">\"; // Change text when active\n                else button.textContent = \"\\u2335\"; // Change text when inactive\n            });\n        });\n        // Hide popup text when clicking outside\n        document.addEventListener(\"click\", function() {\n            toggleButtons.forEach(function(button) {\n                var popupText = button.previousElementSibling;\n                if (popupText.classList.contains(\"active\")) {\n                    popupText.classList.remove(\"active\");\n                    button.classList.remove(\"active\");\n                    button.textContent = \"\\u2335\"; // Reset button text when closing\n                }\n            });\n        });\n    });\n}\n\n\n\"use strict\";\n(0, $d4e144b1e84ad65c$export$fdbad0b2e231b98b)();\n(0, $168fa48b53d2f406$export$fda414375a5f0ecf)();\n(0, $1af2af1f706175c7$export$f9183fa04b4e0476)();\n(0, $365582facd4372eb$export$99aaa11fb71d263)();\n\n})();\n//# sourceMappingURL=index.94ffb267.js.map\n","import {cat} from \"./cat.js\";\nimport {change_language} from \"./change_language.js\";\nimport {change_theme} from \"./change_theme.js\";\nimport {toggle_button} from \"./toggle_button.js\";\n'use strict';\n\nchange_language();\nchange_theme();\ntoggle_button();\ncat();\n","export function cat() {\r\n    // Hide the cat if the screen width is less than 800px\r\n    const cat = document.querySelector('.cat');\r\n    if (window.innerWidth < 1025) {\r\n        cat.style.display = 'none'; // Hide the cat\r\n    } else {\r\n        cat.style.display = 'block'; // Ensure the cat is visible on larger screens\r\n    }\r\n\r\n    // Make the cat's pupils follow the cursor\r\n    document.addEventListener('mousemove', (e) => {\r\n        if (window.innerWidth >= 1025) { // Only run if screen width is >= 800px\r\n            const pupils = document.querySelectorAll('.pupil');\r\n        \r\n            const mouseX = e.clientX;\r\n            const mouseY = e.clientY;\r\n        \r\n            // Get the cat's position\r\n            const catRect = cat.getBoundingClientRect();\r\n            const catX = catRect.left + catRect.width / 2;\r\n            const catY = catRect.top + catRect.height / 2;\r\n        \r\n            // Calculate the distance between the cursor and the cat\r\n            const distance = Math.sqrt((mouseX - catX) ** 2 + (mouseY - catY) ** 2);\r\n        \r\n            // If the cursor is within 100px of the cat, move the cat and eyes down\r\n            if (distance < 100) {\r\n                cat.classList.add('move-down');\r\n            } else {\r\n                cat.classList.remove('move-down');\r\n            }\r\n        \r\n            // Calculate the angle between the cat and the cursor\r\n            const angle = Math.atan2(mouseY - catY, mouseX - catX);\r\n        \r\n            // Calculate the distance the pupils should move\r\n            const maxDistance = 5; // Maximum distance the pupils can move\r\n            const pupilX = Math.cos(angle) * maxDistance;\r\n            const pupilY = Math.sin(angle) * maxDistance;\r\n        \r\n            // Move the pupils\r\n            pupils.forEach(pupil => {\r\n                pupil.style.transform = `translate(calc(-50% + ${pupilX}px), calc(-50% + ${pupilY}px))`;\r\n            });\r\n        }\r\n    });\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", function() {\r\n        const traits = document.querySelectorAll('.trait');\r\n\r\n        traits.forEach(trait => {\r\n            const percent = trait.getAttribute('data-percent');\r\n            const circle = trait.querySelector('.circle');\r\n            const angle = (percent / 100) * 360;\r\n\r\n            trait.style.background = `conic-gradient(#4caf50 ${angle}deg, #e0e0e0 ${angle}deg)`;\r\n\r\n            const radius = 100; // Radius of the circle\r\n            const radians = (angle - 90) * (Math.PI / 180); // Convert degrees to radians\r\n            const x = radius + radius * Math.cos(radians);\r\n            const y = radius + radius * Math.sin(radians);\r\n\r\n            circle.style.left = `${x}px`;\r\n            circle.style.top = `${y}px`;\r\n        });\r\n    });\r\n\r\n    // Listen to window resize to show or hide the cat\r\n    window.addEventListener('resize', () => {\r\n        if (window.innerWidth < 800) {\r\n            cat.style.display = 'none';\r\n        } else {\r\n            cat.style.display = 'block';\r\n        }\r\n    });\r\n}\r\n","export function change_language() {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    const languageButtons = document.querySelectorAll('.change_language h3');\r\n    const elementsToTranslate = document.querySelectorAll('[data-en], [data-fr], [data-ua], [data-de]');\r\n\r\n    // Function to change language\r\n    const changeLanguage = (language) => {\r\n      elementsToTranslate.forEach((element) => {\r\n        if (element.dataset[language]) {\r\n          element.textContent = element.dataset[language];\r\n        }\r\n      });\r\n\r\n      // Save the selected language to localStorage\r\n      localStorage.setItem('selectedLanguage', language);\r\n    };\r\n\r\n    // Load the saved language from localStorage\r\n    const loadLanguage = () => {\r\n      const savedLanguage = localStorage.getItem('selectedLanguage') || 'en'; // Default to 'en' if no language is saved\r\n      changeLanguage(savedLanguage);\r\n    };\r\n\r\n    // Add click event listeners to language buttons\r\n    languageButtons.forEach((button) => {\r\n      button.addEventListener('click', () => {\r\n        const language = button.classList.contains('change_language_en') ? 'en' :\r\n                         button.classList.contains('change_language_ua') ? 'ua' :\r\n                         button.classList.contains('change_language_fr') ? 'fr' :\r\n                         button.classList.contains('change_language_de') ? 'de' : null;\r\n\r\n        if (language) {\r\n          changeLanguage(language);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Load the saved language when the page loads\r\n    loadLanguage();\r\n  });\r\n}","export function change_theme() {\r\n    const settingsBtn = document.getElementById(\"settings-btn\");\r\n    const themeButtons = document.querySelectorAll('.theme-btn');\r\n    const themeContainer = document.getElementById(\"theme-buttons\");\r\n\r\n    // Check if elements exist\r\n    if (!settingsBtn || !themeButtons.length || !themeContainer) {\r\n        console.error(\"Theme changer elements not found!\");\r\n        return;\r\n    }\r\n\r\n    // Toggle theme buttons visibility\r\n    settingsBtn.addEventListener(\"click\", () => {\r\n        themeContainer.classList.toggle(\"hidden\");\r\n        settingsBtn.classList.toggle(\"active\");\r\n    });\r\n\r\n    // Function to apply the theme\r\n    function applyTheme(theme) {\r\n        const root = document.documentElement;\r\n\r\n        const themes = {\r\n            default: ['#1D92B6', '#2A87A5', '#3B8A99', '#1A64A4', '#2D2D2D'],\r\n            dark: ['#1A1A1A', '#2D2D2D', '#444444', '#FF7B7B', '#B0B0B0'],\r\n            yellow: ['#F9D342', '#E2B300', '#FFDD4A', '#FFB300', '#4D4D00'],\r\n            green: ['#4CAF50', '#388E3C', '#66BB6A', '#2E7D32', '#1B5E20'],\r\n        };\r\n\r\n        if (themes[theme]) {\r\n            ['--main-color-1', '--main-color-2', '--background-of-date', '--link-hover', '--link-color']\r\n                .forEach((prop, i) => root.style.setProperty(prop, themes[theme][i]));\r\n        }\r\n\r\n        localStorage.setItem('selectedTheme', theme);\r\n    }\r\n\r\n    // Function to set the selected button\r\n    function setSelectedButton(theme) {\r\n        themeButtons.forEach(button => {\r\n            if (button.dataset.theme === theme) {\r\n                button.classList.add('selected');\r\n            } else {\r\n                button.classList.remove('selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Load the saved theme\r\n    function loadTheme() {\r\n        const savedTheme = localStorage.getItem('selectedTheme') || 'default';\r\n        applyTheme(savedTheme);\r\n        setSelectedButton(savedTheme);\r\n    }\r\n\r\n    // Theme button event listeners\r\n    themeButtons.forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            const theme = button.dataset.theme;\r\n            applyTheme(theme);\r\n            setSelectedButton(theme);\r\n        });\r\n    });\r\n\r\n    loadTheme();\r\n}","export function toggle_button() {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    // Get all toggle buttons\r\n    const toggleButtons = document.querySelectorAll('.toggle__btn');\r\n\r\n    // Add click event listeners to each toggle button\r\n    toggleButtons.forEach(button => {\r\n      button.addEventListener('click', (event) => {\r\n        event.stopPropagation(); // Prevent event bubbling\r\n        const popupText = button.previousElementSibling; // Get the popup text element\r\n\r\n        // Toggle the active class on the popup text and the toggle button\r\n        popupText.classList.toggle('active');\r\n        button.classList.toggle('active');\r\n\r\n        // Change the toggle button text\r\n        if (button.classList.contains('active')) {\r\n          button.textContent = '>'; // Change text when active\r\n        } else {\r\n          button.textContent = '⌵'; // Change text when inactive\r\n        }\r\n      });\r\n    });\r\n\r\n    // Hide popup text when clicking outside\r\n    document.addEventListener('click', () => {\r\n      toggleButtons.forEach(button => {\r\n        const popupText = button.previousElementSibling;\r\n        if (popupText.classList.contains('active')) {\r\n          popupText.classList.remove('active');\r\n          button.classList.remove('active');\r\n          button.textContent = '⌵'; // Reset button text when closing\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n"],"names":["cat","document","addEventListener","languageButtons","querySelectorAll","elementsToTranslate","changeLanguage","language","forEach","element","dataset","textContent","localStorage","setItem","button","classList","contains","getItem","savedTheme","settingsBtn","getElementById","themeButtons","themeContainer","length","console","error","applyTheme","theme","root","documentElement","themes","default","dark","yellow","green","prop","i","style","setProperty","setSelectedButton","add","remove","toggle","toggleButtons","event","stopPropagation","popupText","previousElementSibling","querySelector","window","innerWidth","display","e","pupils","mouseX","clientX","mouseY","clientY","catRect","getBoundingClientRect","catX","left","width","catY","top","height","distance","Math","sqrt","pow","angle","atan2","pupilX","cos","pupilY","sin","pupil","transform","concat","traits","trait","percent","getAttribute","circle","background","radians","PI","x","radius","y"],"version":3,"file":"index.94ffb267.js.map"}